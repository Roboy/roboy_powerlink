	mn_pcp u0 (
		.clk50_clk                                (<connected-to-clk50_clk>),                                //                             clk50.clk
		.rst_clk50_reset_n                        (<connected-to-rst_clk50_reset_n>),                        //                         rst_clk50.reset_n
		.clk100_clk                               (<connected-to-clk100_clk>),                               //                            clk100.clk
		.rst_clk100_reset_n                       (<connected-to-rst_clk100_reset_n>),                       //                        rst_clk100.reset_n
		.benchmark_pio_external_connection_export (<connected-to-benchmark_pio_external_connection_export>), // benchmark_pio_external_connection.export
		.slow_bridge_waitrequest                  (<connected-to-slow_bridge_waitrequest>),                  //                       slow_bridge.waitrequest
		.slow_bridge_readdata                     (<connected-to-slow_bridge_readdata>),                     //                                  .readdata
		.slow_bridge_readdatavalid                (<connected-to-slow_bridge_readdatavalid>),                //                                  .readdatavalid
		.slow_bridge_burstcount                   (<connected-to-slow_bridge_burstcount>),                   //                                  .burstcount
		.slow_bridge_writedata                    (<connected-to-slow_bridge_writedata>),                    //                                  .writedata
		.slow_bridge_address                      (<connected-to-slow_bridge_address>),                      //                                  .address
		.slow_bridge_write                        (<connected-to-slow_bridge_write>),                        //                                  .write
		.slow_bridge_read                         (<connected-to-slow_bridge_read>),                         //                                  .read
		.slow_bridge_byteenable                   (<connected-to-slow_bridge_byteenable>),                   //                                  .byteenable
		.slow_bridge_debugaccess                  (<connected-to-slow_bridge_debugaccess>),                  //                                  .debugaccess
		.cpu_bridge_waitrequest                   (<connected-to-cpu_bridge_waitrequest>),                   //                        cpu_bridge.waitrequest
		.cpu_bridge_readdata                      (<connected-to-cpu_bridge_readdata>),                      //                                  .readdata
		.cpu_bridge_readdatavalid                 (<connected-to-cpu_bridge_readdatavalid>),                 //                                  .readdatavalid
		.cpu_bridge_burstcount                    (<connected-to-cpu_bridge_burstcount>),                    //                                  .burstcount
		.cpu_bridge_writedata                     (<connected-to-cpu_bridge_writedata>),                     //                                  .writedata
		.cpu_bridge_address                       (<connected-to-cpu_bridge_address>),                       //                                  .address
		.cpu_bridge_write                         (<connected-to-cpu_bridge_write>),                         //                                  .write
		.cpu_bridge_read                          (<connected-to-cpu_bridge_read>),                          //                                  .read
		.cpu_bridge_byteenable                    (<connected-to-cpu_bridge_byteenable>),                    //                                  .byteenable
		.cpu_bridge_debugaccess                   (<connected-to-cpu_bridge_debugaccess>),                   //                                  .debugaccess
		.sync_irq_irq                             (<connected-to-sync_irq_irq>),                             //                          sync_irq.irq
		.mac_irq_irq                              (<connected-to-mac_irq_irq>),                              //                           mac_irq.irq
		.flash_bridge_waitrequest                 (<connected-to-flash_bridge_waitrequest>),                 //                      flash_bridge.waitrequest
		.flash_bridge_readdata                    (<connected-to-flash_bridge_readdata>),                    //                                  .readdata
		.flash_bridge_readdatavalid               (<connected-to-flash_bridge_readdatavalid>),               //                                  .readdatavalid
		.flash_bridge_burstcount                  (<connected-to-flash_bridge_burstcount>),                  //                                  .burstcount
		.flash_bridge_writedata                   (<connected-to-flash_bridge_writedata>),                   //                                  .writedata
		.flash_bridge_address                     (<connected-to-flash_bridge_address>),                     //                                  .address
		.flash_bridge_write                       (<connected-to-flash_bridge_write>),                       //                                  .write
		.flash_bridge_read                        (<connected-to-flash_bridge_read>),                        //                                  .read
		.flash_bridge_byteenable                  (<connected-to-flash_bridge_byteenable>),                  //                                  .byteenable
		.flash_bridge_debugaccess                 (<connected-to-flash_bridge_debugaccess>),                 //                                  .debugaccess
		.gp_irq_irq                               (<connected-to-gp_irq_irq>),                               //                            gp_irq.irq
		.cpu_resetrequest_resetrequest            (<connected-to-cpu_resetrequest_resetrequest>),            //                  cpu_resetrequest.resetrequest
		.cpu_resetrequest_resettaken              (<connected-to-cpu_resetrequest_resettaken>),              //                                  .resettaken
		.jtag_reset_reset                         (<connected-to-jtag_reset_reset>),                         //                        jtag_reset.reset
		.powerlink_led_export                     (<connected-to-powerlink_led_export>)                      //                     powerlink_led.export
	);

